#include <mach/mt_typedefs.h>

#define FGAUGE_VOLTAGE_FACTOR           2.44 // mV
#define FGAUGE_CURRENT_FACTOR           6.25 // uV/Rsns
#define FGAUGE_CURRENT_OFFSET_FACTOR    1.56 // uV/Rsns
#define FGAUGE_CAR_FACTOR               6.25 // uV/Rsns
#define FGAUGE_RSNS_FACTOR              0.02 // Ohm

//#define COMPASATE_OCV                   80 // mV for evb
#define COMPASATE_OCV                   40 // mV for phone

#define BATTERY_VOLTAGE_MINIMUM         3400
#define BATTERY_VOLTAGE_MAXIMUM         4200

#define BATTERY_CAPACITY_MAXIMUM        1708

#define TEMPERATURE_T0                  110
#define TEMPERATURE_T1                  0
#define TEMPERATURE_T2                  25
#define TEMPERATURE_T3                  50
#define TEMPERATURE_T                   255 // This should be fixed, never change the value

//#define BATT_CAPACITY                   1280
#define BATT_CAPACITY                   1687

#define ENABLE_SW_COULOMB_COUNTER       0 // 1 is enable, 0 is disable
//#define ENABLE_SW_COULOMB_COUNTER       1 // 1 is enable, 0 is disable

//#define FG_CURRENT_OFFSET_DISCHARGING 	31
#define FG_CURRENT_OFFSET_DISCHARGING 	0

#define FG_RESISTANCE 	20

#define FG_METER_RESISTANCE 	0
//#define FG_METER_RESISTANCE 	540 // current meter

//#define MAX_BOOTING_TIME_FGCURRENT	5*6 // 5 seconds, 6 points = 1s
//<2012/10/18-tedwu, Fix CR issue of wrong percentage if plugging usb too early while booting.
//#define MAX_BOOTING_TIME_FGCURRENT	1*10 // 10s
#define MAX_BOOTING_TIME_FGCURRENT	1*30
//>2012/10/18-tedwu

#if defined(CONFIG_POWER_EXT)
//#define OCV_BOARD_COMPESATE	32 //mV 
#define OCV_BOARD_COMPESATE	72 //mV 
#define R_FG_BOARD_BASE		1000
#define R_FG_BOARD_SLOPE	1000 //slope
#else
//#define OCV_BOARD_COMPESATE	0 //mV 
//#define OCV_BOARD_COMPESATE	48 //mV 
//#define OCV_BOARD_COMPESATE	25 //mV 
#define OCV_BOARD_COMPESATE	0 //mV 
#define R_FG_BOARD_BASE		1000
#define R_FG_BOARD_SLOPE	1000 //slope
//#define R_FG_BOARD_SLOPE	1057 //slope
//#define R_FG_BOARD_SLOPE	1075 //slope
#endif

#define Q_MAX_POS_50	1708
#define Q_MAX_POS_25	1687
#define Q_MAX_POS_0		1529
#define Q_MAX_NEG_10	1103

#define Q_MAX_POS_50_H_CURRENT	1698
#define Q_MAX_POS_25_H_CURRENT	1663
#define Q_MAX_POS_0_H_CURRENT	1164
#define Q_MAX_NEG_10_H_CURRENT	800 //418   //2013/3/6-MaoyiChou, Fix capacity down to 1% when temperture -20C.

#define R_FG_VALUE 				20 // mOhm, base is 20
#define CURRENT_DETECT_R_FG	100  //10mA

#define OSR_SELECT_7			0

//<2012/11/30-tedwu, Configure the CAR_TUNE_VALUE for different H/W version.
#if defined(ARIMA_PROJECT_HAWK35_DTV)  // HAWK35_DTV & HAWK35
  #if defined(HAWK35_DTV_EP2)
    #define CAR_TUNE_VALUE      105 //1.05 (EP1.1, EP2.0)
  #elif defined(HAWK35_DTV_EP0) || defined(HAWK35_DTV_EP1)
    #define CAR_TUNE_VALUE       93 //0.93
  #else
    // TODO: Define proper value by different H/W version.
    #define CAR_TUNE_VALUE      100 //1.00
  #endif
#else  // HAWK35 only
  #if defined(HAWK35_EP0)
    #define CAR_TUNE_VALUE       93 //0.93
  #else
    // TODO: Define proper value by different H/W version.
    #define CAR_TUNE_VALUE      100 //1.00
  #endif
#endif
//>2012/11/30-tedwu

/////////////////////////////////////////////////////////////////////
// <DOD, Battery_Voltage> Table
/////////////////////////////////////////////////////////////////////
typedef struct _BATTERY_PROFILE_STRUC
{
    kal_int32 percentage;
    kal_int32 voltage;
} BATTERY_PROFILE_STRUC, *BATTERY_PROFILE_STRUC_P;

typedef enum
{
    T1_0C,
    T2_25C,
    T3_50C
} PROFILE_TEMPERATURE;

// T0 -10C
BATTERY_PROFILE_STRUC battery_profile_t0[] =
{
	{0  , 4292},
	{3  , 4268},
	{5  , 4246},
	{8  , 4224},
	{11 , 4202},
	{14 , 4178},
	{16 , 4146},
	{19 , 4104},
	{22 , 4074},
	{24 , 4053},
	{27 , 4029},
	{30 , 4009},
	{32 , 3991},
	{35 , 3976},
	{38 , 3961},
	{41 , 3946},
	{43 , 3930},
	{46 , 3912},
	{49 , 3895},
	{51 , 3880},
	{54 , 3867},
	{57 , 3856},
	{60 , 3846},
	{62 , 3838},
	{65 , 3830},
	{68 , 3823},
	{70 , 3816},
	{73 , 3810},  
	{76 , 3804}, 
	{78 , 3798},
	{81 , 3795},
	{82 , 3792},  
	{84 , 3789},
	{85 , 3788},
	{86 , 3785},
	{87 , 3784},
	{88 , 3782},
	{89 , 3781},
	{90 , 3781},
	{91 , 3779},
	{91 , 3778},
	{92 , 3778},
	{92 , 3777},
	{93 , 3776},
	{93 , 3776},
	{94 , 3775},
	{94 , 3775},
	{94 , 3775},
  {95 , 3774},
  {95 , 3773},
  {95 , 3773},
  {96 , 3774},
  {96 , 3773},
  {96 , 3772},
  {96 , 3772},
  {97 , 3772},
  {97 , 3771},
  {97 , 3771},
  {97 , 3772},
  {98 , 3771},
  {98 , 3771},
  {98 , 3771},
  {98 , 3771},
  {98 , 3771},
  {99 , 3771},
  {99 , 3771},
  {99 , 3771},
  {99 , 3771},
  {99 , 3771},
  {99 , 3770},
  {99 , 3770},
  {100, 3770},
  {100, 3770},
  {100, 3770},
  {100, 3770}
};      
        
// T1 0C
BATTERY_PROFILE_STRUC battery_profile_t1[] =
{
	{0  , 4313},
	{2  , 4263},
	{4  , 4225},
	{6  , 4203},
	{8  , 4183},
	{10 , 4162},
	{12 , 4144},
	{14 , 4126},
	{16 , 4107},
	{18 , 4091},
	{19 , 4076},
	{21 , 4059},
	{23 , 4039},
	{25 , 4018},
	{27 , 4000},
	{29 , 3984},
	{31 , 3966},
	{33 , 3950},
	{35 , 3933},
	{37 , 3917},
	{39 , 3901},
	{41 , 3887},
	{43 , 3875},
	{45 , 3864},
	{47 , 3854},
	{49 , 3845},
	{51 , 3837},
	{53 , 3829},  
	{55 , 3822}, 
	{57 , 3816},
	{59 , 3808},
	{60 , 3803},  
	{62 , 3797},
	{64 , 3791},
	{66 , 3787},
	{68 , 3782},
	{70 , 3778},
	{72 , 3773},
	{74 , 3768},
	{76 , 3762},
	{78 , 3753},
	{80 , 3744},
	{82 , 3733},
	{84 , 3722},
	{86 , 3712},
	{88 , 3705},
	{90 , 3701},
	{92 , 3696},
  {94 , 3691},
  {95 , 3686},
  {96 , 3682},
  {97 , 3677},
  {97 , 3671},
  {97 , 3665},
  {98 , 3659},
  {98 , 3652},
  {98 , 3645},
  {99 , 3639},
  {99 , 3633},
  {99 , 3628},
  {99 , 3624},
  {99 , 3620},
  {99 , 3617},
  {99 , 3613},
  {99 , 3610},
  {99 , 3607},
  {100, 3605},
  {100, 3603},
  {100, 3601},
  {100, 3599},
  {100, 3597},
  {100, 3595},
  {100, 3594},
  {100, 3592},
  {100, 3592}
};

// T2 25C
BATTERY_PROFILE_STRUC battery_profile_t2[] =
{
	{0  , 4335},
	{2  , 4313},
	{4  , 4293},
	{5  , 4273},
	{7  , 4254},
	{9  , 4235},
	{11 , 4216},
	{12 , 4197},
	{14 , 4178},
	{16 , 4160},
	{18 , 4142},
	{19 , 4124},
	{21 , 4107},
	{23 , 4090},
	{25 , 4076},
	{27 , 4059},
	{28 , 4041},
	{30 , 4024},
	{32 , 4008},
	{34 , 3992},
	{35 , 3978},
	{37 , 3965},
	{39 , 3951},
	{41 , 3933},
	{42 , 3914},
	{44 , 3896},
	{46 , 3881},
	{48 , 3868},  
	{50 , 3858}, 
	{51 , 3849},
	{53 , 3841},
	{55 , 3833},  
	{57 , 3825},
	{58 , 3819},
	{60 , 3812},
	{62 , 3806},
	{64 , 3799},
	{65 , 3795},
	{67 , 3789},
	{69 , 3784},
	{71 , 3779},
	{73 , 3773},
	{74 , 3768},
	{76 , 3762},
	{78 , 3754},
	{80 , 3746},
	{81 , 3738},
	{83 , 3724},
  {85 , 3710},
  {87 , 3692},
  {88 , 3687},
  {90 , 3685},
  {92 , 3684},
  {94 , 3681},
  {96 , 3668},
  {97 , 3603},
  {99 , 3497},
  {100, 3350},
  {/*101*/100, 3318},
  {/*101*/100, 3302},
  {/*101*/100, 3294},
  {/*101*/100, 3291},
  {/*101*/100, 3288},
  {/*101*/100, 3285},
  {/*101*/100, 3284},
  {/*101*/100, 3284},
  {/*101*/100, 3281},
  {/*101*/100, 3279},
  {/*101*/100, 3278},
  {/*101*/100, 3276},
  {/*101*/100, 3275},
  {/*101*/100, 3273},
  {/*101*/100, 3272},
  {/*101*/100, 3269},
  {/*101*/100, 3269}
}; 

// T3 50C
BATTERY_PROFILE_STRUC battery_profile_t3[] =
{
	{0  , 4342},
	{2  , 4323},
	{4  , 4303},
	{5  , 4285},
	{7  , 4265},
	{9  , 4247},
	{10 , 4228},
	{12 , 4210},
	{14 , 4190},
	{16 , 4172},
	{17 , 4154},
	{19 , 4136},
	{21 , 4118},
	{23 , 4101},
	{24 , 4083},
	{26 , 4067},
	{28 , 4051},
	{30 , 4036},
	{31 , 4019},
	{33 , 4004},
	{35 , 3990},
	{37 , 3976},
	{38 , 3962},
	{40 , 3948},
	{42 , 3933},
	{44 , 3914},
	{45 , 3894},
	{47 , 3878},  
	{49 , 3866}, 
	{51 , 3856},
	{52 , 3847},
	{54 , 3838},  
	{56 , 3831},
	{58 , 3823},
	{59 , 3816},
	{61 , 3808},
	{63 , 3802},
	{65 , 3796},
	{66 , 3791},
	{68 , 3785},
	{70 , 3779},
	{72 , 3768},
	{73 , 3758},
	{75 , 3752},
	{77 , 3743},
	{79 , 3736},
	{80 , 3728},
	{82 , 3721},
  {84 , 3708},
  {86 , 3694},
  {87 , 3676},
  {89 , 3673},
  {91 , 3671},
  {93 , 3670},
  {94 , 3665},
  {96 , 3645},
  {98 , 3574},
  {100, 3454},
  {/*101*/100, 3273},
  {/*101*/100, 3252},
  {/*101*/100, 3247},
  {/*101*/100, 3244},
  {/*101*/100, 3244},
  {/*101*/100, 3242},
  {/*101*/100, 3240},
  {/*101*/100, 3240},
  {/*101*/100, 3238},
  {/*101*/100, 3235},
  {/*101*/100, 3235},
  {/*101*/100, 3232},
  {/*101*/100, 3230},
  {/*101*/100, 3228},
  {/*101*/100, 3227},
  {/*101*/100, 3225},
  {/*101*/100, 3225}
};              

// battery profile for actual temperature. The size should be the same as T1, T2 and T3
BATTERY_PROFILE_STRUC battery_profile_temperature[] =
{
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
	  {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
	  {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0}
};    

/////////////////////////////////////////////////////////////////////
// <Rbat, Battery_Voltage> Table
/////////////////////////////////////////////////////////////////////
typedef struct _R_PROFILE_STRUC
{
    kal_int32 resistance; // Ohm
    kal_int32 voltage;
} R_PROFILE_STRUC, *R_PROFILE_STRUC_P;

// T0 -10C
R_PROFILE_STRUC r_profile_t0[] =
{
	{278     ,  4292},
	{1008    ,  4268},
	{1018    ,  4246},
	{1020    ,  4224},
	{1028    ,  4202},
	{1043    ,  4178},
	{1070    ,  4146},
	{1178    ,  4104},
	{1333    ,  4074},
	{1355    ,  4053},
	{1360    ,  4029},
	{1373    ,  4009},
	{1383    ,  3991},
	{1393    ,  3976},
	{1400    ,  3961},
	{1410    ,  3946},
	{1410    ,  3930},
	{1405    ,  3912},
	{1400    ,  3895},
	{1403    ,  3880},
	{1405    ,  3867},
	{1410    ,  3856},
	{1415    ,  3846},
	{1428    ,  3838},
	{1440    ,  3830},
	{1450    ,  3823},
	{1460    ,  3816},
	{1473    ,  3810},  
	{1483    ,  3804}, 
	{1498    ,  3798},
	{1490    ,  3795},
	{1480    ,  3792},  
	{1473    ,  3789},
	{1470    ,  3788},
	{1463    ,  3785},
	{1460    ,  3784},
	{1455    ,  3782},
	{1455    ,  3781},
	{1453    ,  3781},
	{1448    ,  3779},
	{1448    ,  3778},
	{1448    ,  3778},
	{1445    ,  3777},
	{1445    ,  3776},
	{1443    ,  3776},
	{1440    ,  3775},
	{1440    ,  3775},
	{1440    ,  3775},
  {1438    ,  3774},
  {1435    ,  3773},
  {1435    ,  3773},
  {1438    ,  3774},
  {1435    ,  3773},
  {1435    ,  3772},
  {1435    ,  3772},
  {1430    ,  3772},
  {1433    ,  3771},
  {1428    ,  3771},
  {1435    ,  3772},
  {1433    ,  3771},
  {1433    ,  3771},
  {1430    ,  3771},
  {1430    ,  3771},
  {1435    ,  3771},
  {1428    ,  3771},
  {1430    ,  3771},
  {1430    ,  3771},
  {1428    ,  3771},
  {1430    ,  3771},
  {1430    ,  3770},
  {1428    ,  3770},
  {1430    ,  3770},
  {1425    ,  3770},
  {1430    ,  3770},
  {1425    ,  3770}
};

// T1 0C
R_PROFILE_STRUC r_profile_t1[] =
{
	{220    ,  4313},
	{495    ,  4263},
	{595    ,  4225},
	{620    ,  4203},
	{633    ,  4183},
	{638    ,  4162},
	{650    ,  4144},
	{660    ,  4126},
	{668    ,  4107},
	{675    ,  4091},
	{688    ,  4076},
	{698    ,  4059},
	{703    ,  4039},
	{708    ,  4018},
	{713    ,  4000},
	{715    ,  3984},
	{713    ,  3966},
	{713    ,  3950},
	{708    ,  3933},
	{700    ,  3917},
	{698    ,  3901},
	{698    ,  3887},
	{703    ,  3875},
	{708    ,  3864},
	{713    ,  3854},
	{720    ,  3845},
	{728    ,  3837},
	{738    ,  3829},  
	{745    ,  3822}, 
	{760    ,  3816},
	{765    ,  3808},
	{778    ,  3803},  
	{790    ,  3797},
	{793    ,  3791},
	{805    ,  3787},
	{823    ,  3782},
	{840    ,  3778},
	{863    ,  3773},
	{885    ,  3768},
	{908    ,  3762},
	{925    ,  3753},
	{945    ,  3744},
	{963   ,   3733},
	{983     ,  3722},
	{1000    ,  3712},
	{1030    ,  3705},
	{1070    ,  3701},
	{1123    ,  3696},
  {1190    ,  3691},
  {1218    ,  3686},
  {1208    ,  3682},
  {1195    ,  3677},
  {1183    ,  3671},
  {1163    ,  3665},
  {1150    ,  3659},
  {1130    ,  3652},
  {1118    ,  3645},
  {1098    ,  3639},
  {1088    ,  3633},
  {1075    ,  3628},
  {1065    ,  3624},
  {1060    ,  3620},
  {1045    ,  3617},
  {1040    ,  3613},
  {1035    ,  3610},
  {1025    ,  3607},
  {1018    ,  3605},
  {1020    ,  3603},
  {1013    ,  3601},
  {1005    ,  3599},
  {1005    ,  3597},
  {995     ,  3595},
  {998     ,  3594},
  {988     ,  3592},
  {990     ,  3592}
}; 

// T2 25C
R_PROFILE_STRUC r_profile_t2[] =
{
	{148    ,  4335},
	{170    ,  4313},
	{175    ,  4293},
	{175    ,  4273},
	{178    ,  4254},
	{183    ,  4235},
	{183    ,  4216},
	{183    ,  4197},
	{185    ,  4178},
	{188    ,  4160},
	{193    ,  4142},
	{190    ,  4124},
	{195    ,  4107},
	{200    ,  4090},
	{208    ,  4076},
	{208    ,  4059},
	{210    ,  4041},
	{215    ,  4024},
	{223    ,  4008},
	{228    ,  3992},
	{230    ,  3978},
	{233    ,  3965},
	{230    ,  3951},
	{220    ,  3933},
	{205    ,  3914},
	{193    ,  3896},
	{185    ,  3881},
	{183    ,  3868},  
	{185    ,  3858}, 
	{185    ,  3849},
	{188    ,  3841},
	{190    ,  3833},  
	{193    ,  3825},
	{198    ,  3819},
	{200    ,  3812},
	{200    ,  3806},
	{203    ,  3799},
	{208    ,  3795},
	{208    ,  3789},
	{213    ,  3784},
	{213    ,  3779},
	{210    ,  3773},
	{213    ,  3768},
	{213    ,  3762},
	{213    ,  3754},
	{215    ,  3746},
	{223    ,  3738},
	{220    ,  3724},
  {225    ,  3710},
  {220    ,  3692},
  {223    ,  3687},
  {233    ,  3685},
  {248    ,  3684},
  {268    ,  3681},
  {285    ,  3668},
  {288    ,  3603},
  {330    ,  3497},
  {375    ,  3350},
  {298    ,  3318},
  {260    ,  3302},
  {243    ,  3294},
  {230    ,  3291},
  {223    ,  3288},
  {223    ,  3285},
  {220    ,  3284},
  {215    ,  3284},
  {220    ,  3281},
  {218    ,  3279},
  {203    ,  3278},
  {215    ,  3276},
  {218    ,  3275},
  {218    ,  3273},
  {220    ,  3272},
  {218    ,  3269},
  {223    ,  3269}
}; 

// T3 50C
R_PROFILE_STRUC r_profile_t3[] =
{
	{118    ,  4342},
	{118    ,  4323},
	{115    ,  4303},
	{120    ,  4285},
	{118    ,  4265},
	{123    ,  4247},
	{120    ,  4228},
	{125    ,  4210},
	{123    ,  4190},
	{125    ,  4172},
	{125    ,  4154},
	{128    ,  4136},
	{130    ,  4118},
	{133    ,  4101},
	{130    ,  4083},
	{135    ,  4067},
	{135    ,  4051},
	{138    ,  4036},
	{140    ,  4019},
	{145    ,  4004},
	{145    ,  3990},
	{150    ,  3976},
	{155    ,  3962},
	{160    ,  3948},
	{160    ,  3933},
	{148    ,  3914},
	{135    ,  3894},
	{125    ,  3878},  
	{123    ,  3866}, 
	{120    ,  3856},
	{123    ,  3847},
	{125    ,  3838},  
	{130    ,  3831},
	{130    ,  3823},
	{133    ,  3816},
	{130    ,  3808},
	{135    ,  3802},
	{138    ,  3796},
	{140    ,  3791},
	{140    ,  3785},
	{143    ,  3779},
	{133    ,  3768},
	{130    ,  3758},
	{133    ,  3752},
	{130    ,  3743},
	{130    ,  3736},
	{128    ,  3728},
	{133    ,  3721},
  {130    ,  3708},
  {133    ,  3694},
  {125    ,  3676},
  {130    ,  3673},
  {133    ,  3671},
  {140    ,  3670},
  {140    ,  3665},
  {148    ,  3645},
  {163    ,  3574},
  {163    ,  3454},
  {185    ,  3273},
  {135    ,  3252},
  {123    ,  3247},
  {118    ,  3244},
  {118    ,  3244},
  {110    ,  3242},
  {115    ,  3240},
  {113    ,  3240},
  {113    ,  3238},
  {110    ,  3235},
  {118    ,  3235},
  {110    ,  3232},
  {115    ,  3230},
  {115    ,  3228},
  {118    ,  3227},
  {113    ,  3225},
  {118    ,  3225}
}; 

// r-table profile for actual temperature. The size should be the same as T1, T2 and T3
R_PROFILE_STRUC r_profile_temperature[] =
{
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
	  {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
	  {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0}
};     


int fgauge_get_saddles(void);
BATTERY_PROFILE_STRUC_P fgauge_get_profile(kal_uint32 temperature);

int fgauge_get_saddles_r_table(void);
R_PROFILE_STRUC_P fgauge_get_profile_r_table(kal_uint32 temperature);
